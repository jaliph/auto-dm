name: Test and Build

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Run vet
        run: go vet ./...

      - name: Build
        run: go build -o auto-dm main.go

  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.24']
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download

      - name: Build for platform (Linux/macOS)
        if: runner.os != 'Windows'
        run: go build -o auto-dm main.go

      - name: Build for platform (Windows)
        if: runner.os == 'Windows'
        run: go build -o auto-dm.exe main.go

      - name: Upload build artifact (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: auto-dm-${{ runner.os }}
          path: auto-dm

      - name: Upload build artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: auto-dm-${{ runner.os }}
          path: auto-dm.exe

  cross-platform-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: go mod download

      - name: Build for multiple platforms
        run: |
          # Linux
          GOOS=linux GOARCH=amd64 go build -o auto-dm-linux-amd64 main.go
          GOOS=linux GOARCH=arm64 go build -o auto-dm-linux-arm64 main.go
          
          # Windows
          GOOS=windows GOARCH=amd64 go build -o auto-dm-windows-amd64.exe main.go
          GOOS=windows GOARCH=arm64 go build -o auto-dm-windows-arm64.exe main.go
          
          # macOS
          GOOS=darwin GOARCH=amd64 go build -o auto-dm-darwin-amd64 main.go
          GOOS=darwin GOARCH=arm64 go build -o auto-dm-darwin-arm64 main.go

      - name: Upload cross-platform artifacts
        uses: actions/upload-artifact@v4
        with:
          name: auto-dm-cross-platform
          path: |
            auto-dm-linux-*
            auto-dm-windows-*
            auto-dm-darwin-*
